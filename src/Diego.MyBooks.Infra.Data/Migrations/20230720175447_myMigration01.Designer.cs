// <auto-generated />
using System;
using Diego.MyBooks.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Diego.MyBooks.Infra.Data.Migrations
{
    [DbContext(typeof(MyBooksDbContext))]
    [Migration("20230720175447_myMigration01")]
    partial class myMigration01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Diego.MyBooks.Domain.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("FormatBookIdId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<Guid>("ReaderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("Diego.MyBooks.Domain.Models.BookInReading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BookId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CurrentPage")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BookId")
                        .IsUnique();

                    b.ToTable("BooksInReading", (string)null);
                });

            modelBuilder.Entity("Diego.MyBooks.Domain.Models.Reader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Readers", (string)null);
                });

            modelBuilder.Entity("Diego.MyBooks.Domain.Models.BookInReading", b =>
                {
                    b.HasOne("Diego.MyBooks.Domain.Models.Book", "Book")
                        .WithOne("BookInReading")
                        .HasForeignKey("Diego.MyBooks.Domain.Models.BookInReading", "BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Diego.MyBooks.Domain.Models.Reader", b =>
                {
                    b.OwnsOne("Diego.MyBooks.Domain.Models.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ReaderId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(120)
                                .HasColumnType("varchar(120)")
                                .HasColumnName("Email");

                            b1.HasKey("ReaderId");

                            b1.ToTable("Readers");

                            b1.WithOwner()
                                .HasForeignKey("ReaderId");
                        });

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("Diego.MyBooks.Domain.Models.Book", b =>
                {
                    b.Navigation("BookInReading")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
